# Systemd service template for RIG Remote Control plugins
# Usage: systemctl enable rig-plugin@scheduled_transmitter.service
#        systemctl start rig-plugin@scheduled_transmitter.service
#
# The %i parameter will be replaced with the plugin name (e.g., "scheduled_transmitter")

[Unit]
Description=RIG Remote Control Plugin: %i
After=network.target
Wants=network.target

[Service]
Type=simple
User=rigremote
Group=rigremote
WorkingDirectory=/opt/rig-web
Environment=PYTHONPATH=/opt/rig-web
Environment=PLUGIN_NAME=%i

# Main command - runs the plugin daemon externally
# Format: plugin_name or plugin_name-rig_id
# Examples: 
#   rig-plugin@scheduled_transmitter.service (single instance)
#   rig-plugin@scheduled_transmitter-rig1.service (per-rig instance)
ExecStart=/bin/bash -c 'if [[ "%i" == *-* ]]; then \
    PLUGIN_NAME=$(echo "%i" | cut -d"-" -f1); \
    RIG_ID=$(echo "%i" | cut -d"-" -f2-); \
    exec /opt/rig-web/venv/bin/python /opt/rig-web/plugins/$PLUGIN_NAME/daemon.py --config /opt/rig-web/config/plugins/$PLUGIN_NAME/$RIG_ID.toml --rig-id $RIG_ID; \
else \
    exec /opt/rig-web/venv/bin/python /opt/rig-web/plugins/%i/daemon.py --config /opt/rig-web/config/plugins/%i/plugin.toml; \
fi'

# Restart configuration
Restart=always
RestartSec=10
StartLimitInterval=0

# Resource limits
MemoryMax=512M
CPUQuota=50%

# Security settings
NoNewPrivileges=true
PrivateTmp=true
ProtectSystem=strict
ProtectHome=true
ReadWritePaths=/opt/rig-web/config /tmp

# Logging
StandardOutput=journal
StandardError=journal
SyslogIdentifier=rig-plugin-%i

[Install]
WantedBy=multi-user.target

# Installation instructions:
# 1. Copy this file to /etc/systemd/system/rig-plugin@.service
# 2. Create user: sudo useradd -r -s /bin/false rigremote
# 3. Set up permissions on /opt/rig-web directory
# 4. Enable specific plugins:
#    sudo systemctl enable rig-plugin@scheduled_transmitter.service
#    sudo systemctl start rig-plugin@scheduled_transmitter.service
# 5. Check status:
#    sudo systemctl status rig-plugin@scheduled_transmitter.service